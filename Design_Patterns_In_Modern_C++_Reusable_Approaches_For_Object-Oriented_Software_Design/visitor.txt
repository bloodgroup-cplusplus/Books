Motivation:
	Need to define a new operation on a entire class hierarchy
	E.g., make a document model printable to HTML/ Markdown
	
	Do not want to keep modifying every class in the Hierarchy

	Single responsibility principle. 

	Should hold
	
	

	The downside of all of these is we need acess to the non-common aspects of classes in the hierarchy

	We cannot give them a single unified interface

	We need to create an external component to handle rendering.


	But preferabily avoid type checks.

	Using dynamic cast to cast to appropriate cast.

	
Visitor:
	A pattern where a component (visitor) is allowed to traverse the entire inheritence hierarcht. 
	The entire visitor is implemented by propagating a single visit() method throughout 
	the entire hierarchy.



